import sqlite3
#sqlite3 IBDdatabase.sqlite "select distinct(StockTicker) from IBD50 order by StockTicker ASC"

#curl -s "http://ichart.finance.yahoo.com/table.csv?s=YHOO&a=11&b=2&c=2005&d=11&e=2&f=2005&g=d&f=sl1&ignore=.csv"

import sys #for cmd line arguments
import urllib #for getting quotes from net
#
def get_historical_prices(symbol, date):
    """
    Get historical prices for the given ticker symbol.
    Date format is 'YYYYMMDD'
    
    Returns a nested list.
    """
#the date goes month(jan=0) day year
    url = 'http://ichart.yahoo.com/table.csv?s=%s&' % symbol + \
          'd=%s&' % str(int(date[5:7]) - 1) + \
          'e=%s&' % str(int(date[8:10])) + \
          'f=%s&' % str(int(date[0:4])) + \
          'g=d&' + \
          'a=%s&' % str(int(date[5:7]) - 1) + \
          'b=%s&' % str(int(date[8:10])) + \
          'c=%s&' % str(int(date[0:4])) + \
          'ignore=.csv'
    days = urllib.urlopen(url).readlines()
    data = [day[:-2].split(',') for day in days]
    return data
#end def get_historical_prices
def get_historical_prices_plus_one_day(symbol, date):
    """
    Get historical prices for the given ticker symbol.
    Returns a nested list.
    """
#the date goes month(jan=0) day year
    url = 'http://ichart.yahoo.com/table.csv?s=%s&' % symbol + \
          'd=%s&' % str(int(date[5:7]) - 1) + \
          'e=%s&' % str(int(date[8:10]) + 1) + \
          'f=%s&' % str(int(date[0:4])) + \
          'g=d&' + \
          'a=%s&' % str(int(date[5:7]) - 1) + \
          'b=%s&' % str(int(date[8:10]) + 1) + \
          'c=%s&' % str(int(date[0:4])) + \
          'ignore=.csv'
    days = urllib.urlopen(url).readlines()
    data = [day[:-2].split(',') for day in days]
    return data
#end def get_historical_prices_plus_one_day
def insert_data(database,table,date,symbol,rank,data):
#    connection=sqlite3.connect(database)
#    cursor=connection.cursor()
#    cursor.execute('DROP TABLE IF EXISTS IBD50StockData2')
#    cursor.execute('DROP TABLE IF EXISTS IBD50StockData') #FOR SOME REASON YOU CAN'T USE A VARIABLE FOR THE TABLE NAME

# NEEDED ANOTHER CURSOR OTHERWISE IT WOULD DESTROY THE RESULT SET WE HAD
    cursor2.execute('CREATE TABLE IF NOT EXISTS IBD50StockData2 (Id INTEGER PRIMARY KEY, Date TEXT, StockTicker TEXT, Rank INTEGER, QuoteDate TEXT, Open INTEGER, High INTEGER, Low INTEGER, Close INTEGER, Volume INTEGER, Adj_Close INTEGER)')

    cursor2.execute('INSERT INTO IBD50StockData2 VALUES(null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', (date,symbol,rank,data[1][0],data[1][1]*100,data[1][2]*100,data[1][3]*100,data[1][4]*100,data[1][5],data[1][6]*100))
#    cursor.execute('INSERT INTO IBD50StockData2 VALUES(null, ?, ?, ?, ?,0,0,0,0,0,0)', (date,symbol,rank,data[1][0]))
    return 0
#end def insert_data

if (len(sys.argv) > 1):
    database=sys.argv[1]
else:
    database="IBDdatabase.sqlite"
    table="IBD50StockData2"

connection=sqlite3.connect(database)
cursor=connection.cursor()
cursor2=connection.cursor()
cursor.execute('select * from  IBD50')
while True:
    row=cursor.fetchone()
    if row == None:
        break
    print row
    ID=row[0] #not needed
    date=row[1]
    ticker=row[2]
    rank=row[3]
    output=get_historical_prices_plus_one_day(ticker, date )
    if output[0][4]=='Close':
        quotedate=output[1][0]
        closingprice=output[1][4]
        print quotedate,closingprice
#K        error=enter_data_into_database(database,table,date,ticker,rank,quotedate,output)
        error=insert_data(database,table,date,ticker,rank,output)

connection.commit()
cursor.close()
#if connection:
#    connection.close()
quit()
#http://www.comp.mq.edu.au/units/comp249/pythonbook/pythoncgi/pysqlite.html
#http://docs.python.org/library/sqlite3.html http://zetcode.com/db/sqlitepythontutorial/
